import streamlit as st
import requests

def display_articles(articles):
    for article in articles:
        st.markdown(f"### {article.get('title', 'No title')}")
        st.markdown(f"[Read more]({article.get('url', '#')})")
        st.markdown("---")

def main():
    st.title("üì∞ CNN News Scraper")
    st.write("·ª®ng d·ª•ng n√†y d√πng FastAPI ƒë·ªÉ thu th·∫≠p tin t·ª©c t·ª´ CNN.")

    # Nh·∫≠p URL t√πy ch·ªânh
    default_url = "https://edition.cnn.com/us"
    user_url = st.text_input("Nh·∫≠p URL CNN mu·ªën scrape:", value=default_url)

    if st.button("L·∫•y b√†i vi·∫øt"):
        if not user_url.startswith("https://edition.cnn.com"):
            st.warning("‚ö†Ô∏è Ch·ªâ ch·∫•p nh·∫≠n URL t·ª´ CNN (https://edition.cnn.com/...)")
            return

        api_url = "https://nlpapplication.onrender.com/scrape"
        params = {"url": user_url}

        try:
            with st.spinner("ƒêang l·∫•y d·ªØ li·ªáu..."):
                response = requests.get(api_url, params=params, timeout=10)

            if response.status_code == 200:
                data = response.json()
                articles = data.get("articles", [])
                if articles:
                    display_articles(articles)
                else:
                    st.info("Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt n√†o.")
            else:
                st.error(f"L·ªói t·ª´ API: {response.status_code}")
        except requests.exceptions.RequestException as e:
            st.error(f"Kh√¥ng th·ªÉ k·∫øt n·ªëi t·ªõi API: {e}")

if __name__ == "__main__":
    main()
